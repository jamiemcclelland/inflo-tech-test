@model UserPageViewModel

<h2>User List</h2>

<div class="table-responsive">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Forename</th>
                <th>Surname</th>
                <th>Date of Birth</th>
                <th>Email</th>
                <th>Account Active</th>
                <th style="width: 1px;"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr>
                    <td>
                        @user.Id
                    </td>
                    <td>
                        @user.Forename
                    </td>
                    <td>
                        @user.Surname
                    </td>
                    <td>
                        @user.DateOfBirth
                    </td>
                    <td>
                        @user.Email
                    </td>
                    <td>
                        @(user.IsActive ? "Yes" : "No")
                    </td>
                    <td>
                        <div class="dropdown">
                            <button type="button" class="btn btn-default dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false" id="btnToggleActions">
                                Actions
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="btnToggleActions">
                                <li><a class="dropdown-item view-user-btn" href="#" data-bs-toggle="offcanvas" data-bs-target="#viewUserSidebar" data-user='@Html.Raw(System.Text.Json.JsonSerializer.Serialize(user))'>View</a></li>
                                <li><a class="dropdown-item edit-user-btn" href="#" data-bs-toggle="offcanvas" data-bs-target="#userSidebar" data-user='@Html.Raw(System.Text.Json.JsonSerializer.Serialize(user))'>Edit</a></li>
                                <li><a class="dropdown-item delete-user-btn" href="#" data-bs-toggle="modal" data-bs-target="#deleteUserModal" data-user-id="@user.Id">Delete</a></li>
                            </ul>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div>
    <div class="btn-group" role="group">
        <a asp-controller="Users" asp-action="List" asp-route-isActive="" class="btn btn-default">Show All</a>
        <a asp-controller="Users" asp-action="List" asp-route-isActive="true" class="btn btn-default">Active Only</a>
        <a asp-controller="Users" asp-action="List" asp-route-isActive="false" class="btn btn-default">Non Active</a>
    </div>

    <a href="#" data-bs-toggle="offcanvas" data-bs-target="#userSidebar" class="btn btn-primary float-end add-user-btn">
        Add User
    </a>
</div>

<!-- Delete User Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="deleteUserForm" method="post">
        @Html.AntiForgeryToken()
        <div class="modal-header">
          <h5 class="modal-title" id="deleteUserModalLabel">Delete User</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" id="deleteUserId" name="id" />
          Are you sure you want to delete this user?
          Please type <strong>delete</strong> below to confirm.
          <input type="text" id="deleteConfirmText" class="form-control mt-2" placeholder="Type 'delete'" />
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" id="confirmDeleteBtn" class="btn btn-danger" disabled>Delete</button>
        </div>
      </form>
    </div>
  </div>
</div>


<!-- User Sidebar form -->
<div class="offcanvas offcanvas-end" id="userSidebar" tabindex="-1">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="userSidebarTitle">Add New User</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas"></button>
    </div>
    <div class="offcanvas-body">
        <form id="userForm" asp-controller="Users" asp-action="Create" method="post">
            @Html.AntiForgeryToken()

            <input type="hidden" id="userId" name="Id" />

            <div class="mb-3">
                <label asp-for="User.Forename" class="form-label"></label>
                <input asp-for="User.Forename" class="form-control" id="Forename" />
                <span asp-validation-for="User.Forename" class="text-danger d-none"></span>
            </div>

            <div class="mb-3">
                <label asp-for="User.Surname" class="form-label"></label>
                <input asp-for="User.Surname" class="form-control" id="Surname"/>
                <span asp-validation-for="User.Surname" class="text-danger d-none"></span>
            </div>

            <div class="mb-3">
                <label asp-for="User.DateOfBirth" class="form-label">Date of Birth</label>
                <input asp-for="User.DateOfBirth" class="form-control" id="DateOfBirth"/>
                <span asp-validation-for="User.DateOfBirth" class="text-danger d-none"></span>
            </div>

            <div class="mb-3">
                <label asp-for="User.Email" class="form-label">Email Address</label>
                <input asp-for="User.Email" class="form-control" id="Email"/>
                <span asp-validation-for="User.Email" class="text-danger d-none"></span>
            </div>

            <div class="form-check mb-3">
                <input asp-for="User.IsActive" class="form-check-input" id="IsActive"/>
                <label asp-for="User.IsActive" class="form-check-label"></label>
            </div>

            <button type="submit" class="btn btn-success" id="userSidebarSaveButton">Save</button>
        </form>
    </div>
</div>

<div class="offcanvas offcanvas-end" tabindex="-1" id="viewUserSidebar" aria-labelledby="viewUserSidebarLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="viewUserSidebarLabel">User Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="user-detail">
            <label class="form-label">Forename</label>
            <p id="viewForename" class="form-control-plaintext"></p>
        </div>
        <div class="user-detail">
            <label class="form-label">Surname</label>
            <p id="viewSurname" class="form-control-plaintext"></p>
        </div>
        <div class="user-detail">
            <label class="form-label">Date of Birth</label>
            <p id="viewDateOfBirth" class="form-control-plaintext"></p>
        </div>
        <div class="user-detail">
            <label class="form-label">Email</label>
            <p id="viewEmail" class="form-control-plaintext"></p>
        </div>
        <div class="user-detail">
            <label class="form-label">Active</label>
            <p id="viewIsActive" class="form-control-plaintext"></p>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            var form = $("#userForm");

            form.on("submit", function (e) {
                if (!form.valid()) {
                    e.preventDefault();
                    form.find("span.field-validation-error").removeClass("d-none");
                } else {}
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const viewButtons = document.querySelectorAll('.view-user-btn');

            const forenameEl = document.getElementById('viewForename');
            const surnameEl = document.getElementById('viewSurname');
            const dobEl = document.getElementById('viewDateOfBirth');
            const emailEl = document.getElementById('viewEmail');
            const isActiveEl = document.getElementById('viewIsActive');

            viewButtons.forEach(btn => {
                btn.addEventListener('click', function () {
                    const user = JSON.parse(this.dataset.user);

                    forenameEl.textContent = user.Forename;
                    surnameEl.textContent = user.Surname;
                    dobEl.textContent = user.DateOfBirth;
                    emailEl.textContent = user.Email;
                    isActiveEl.textContent = user.IsActive ? "Yes" : "No";
                });
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const deleteModal = document.getElementById('deleteUserModal');
            const confirmInput = document.getElementById('deleteConfirmText');
            const confirmBtn = document.getElementById('confirmDeleteBtn');
            const deleteForm = document.getElementById('deleteUserForm');
            const deleteUserIdField = document.getElementById('deleteUserId');

            confirmInput.addEventListener('input', function () {
            confirmBtn.disabled = confirmInput.value.toLowerCase() !== 'delete';
            });

            document.querySelectorAll('.delete-user-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                const userId = this.dataset.userId;
                deleteUserIdField.value = userId;
            });
            });

            deleteForm.addEventListener('submit', async function (e) {
            e.preventDefault();

            const id = deleteUserIdField.value;
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            const response = await fetch(`/users/delete/${id}`, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': token
                }
            });

            if (response.ok) {
                location.reload();
            } else {
                alert('Error deleting user.');
            }
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const sidebar = document.getElementById('userSidebar');
            const form = document.getElementById('userForm');
            const title = document.getElementById('userSidebarTitle');
            const saveButton = document.getElementById('userSidebarSaveButton');

            const fields = {
                id: document.getElementById('userId'),
                forename: document.getElementById('Forename'),
                surname: document.getElementById('Surname'),
                dob: document.getElementById('DateOfBirth'),
                email: document.getElementById('Email'),
                isActive: document.getElementById('IsActive')
            };

            function toIsoDate(dateStr) {
                if (!dateStr) return '';
                const parts = dateStr.split('/');
                if (parts.length === 3) {
                    const [day, month, year] = parts;
                    return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;
                }
                return dateStr;
            }

            document.querySelectorAll('.add-user-btn').forEach(btn => {
                btn.addEventListener('click', function () {
                    title.textContent = 'Add New User';
                    saveButton.textContent = 'Save';
                    form.action = '/users/users/create';

                    fields.id.value = '';
                    fields.forename.value = '';
                    fields.surname.value = '';
                    fields.dob.value = '';
                    fields.email.value = '';
                    fields.isActive.checked = false;

                    form.querySelectorAll('span.text-danger').forEach(span => span.classList.add('d-none'));
                });
            });

            document.querySelectorAll('.edit-user-btn').forEach(btn => {
                btn.addEventListener('click', function () {
                    const user = JSON.parse(this.dataset.user);

                    title.textContent = 'Edit User';
                    saveButton.textContent = 'Update';
                    form.action = `/users/users/edit/${user.Id}`;

                    fields.id.value = user.Id;
                    fields.forename.value = user.Forename;
                    fields.surname.value = user.Surname;
                    fields.dob.value = toIsoDate(user.DateOfBirth);
                    fields.email.value = user.Email;
                    fields.isActive.checked = user.IsActive;
                });
            });
        });
    </script>
}
